{
  "pluginAlias": "Meross",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "customUiPath": "./lib/homebridge-ui",
  "headerDisplay": "<p align=\"center\"><img width=\"60%\" src=\"https://user-images.githubusercontent.com/43026681/126865477-39d9bbe9-9d0a-402a-9484-6cba8875256c.png\"></p><p align=\"center\">For help and support please visit our <a href=\"https://github.com/bwp91/homebridge-meross/wiki\">GitHub Wiki</a>. We hope you find this plugin useful!</p>",
  "schema": {
    "name": {
      "type": "string",
      "title": "Plugin Name",
      "default": "Meross"
    },
    "username": {
      "title": "Meross Username",
      "type": "string",
      "placeholder": "email@email.com",
      "description": "Enter your Meross username to enable cloud devices."
    },
    "password": {
      "title": "Meross Password",
      "type": "string",
      "description": "Enter your Meross password to enable cloud devices."
    },
    "userkey": {
      "title": "Meross Key",
      "type": "string",
      "description": "Enter your Meross key to enable local devices. You don't need to enter this if you have entered your username and password above. For help with obtaining this value see <a href=\"https://github.com/bwp91/homebridge-meross/wiki/Local-Devices\" target=\"_blank\">the wiki</a>.",
      "condition": {
        "functionBody": "return !(model.username && model.password);"
      }
    },
    "cloudRefreshRate": {
      "title": "Cloud Refresh Rate",
      "type": "integer",
      "description": "Number of seconds between polls to cloud Meross devices. Set to 0 to disable polling, otherwise must be 30 or more.",
      "placeholder": 300,
      "minimum": 0,
      "condition": {
        "functionBody": "return (model.username && model.password);"
      }
    },
    "refreshRate": {
      "title": "Local Refresh Rate",
      "type": "integer",
      "description": "Number of seconds between polls to local Meross devices. Set to 0 to disable polling, otherwise must be 5 or more.",
      "placeholder": 5,
      "minimum": 0
    },
    "disableDeviceLogging": {
      "type": "boolean",
      "title": "Disable Device Logging",
      "description": "Global logging setting for accessory status changes. If true then accessory status changes will not be logged. This can also be set per accessory later in the config."
    },
    "debug": {
      "title": "Debug Logging",
      "type": "boolean",
      "description": "Global logging setting for the plugin. If true then debug information will be added to the log. This can also be set per accessory later in the config."
    },
    "debugMerossCloud": {
      "title": "Debug Meross-Cloud",
      "type": "boolean",
      "description": "If true, the meross-cloud library will debug to the log."
    },
    "disablePlugin": {
      "title": "Disable Plugin",
      "type": "boolean",
      "description": "If true, the plugin will remove all accessories and not load the plugin on restart."
    },
    "devices": {
      "type": "array",
      "title": "Device Settings",
      "description": "Optional settings for your Meross devices.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "The name for the device to be shown in HomeKit.",
            "type": "string",
            "required": true
          },
          "serialNumber": {
            "title": "Serial Number",
            "type": "string",
            "placeholder": "Serial Number",
            "description": "The serial number (or uuid) of this device.",
            "required": true,
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].name);"
            }
          },
          "connection": {
            "title": "Connection Type",
            "description": "Cloud or local.",
            "type": "string",
            "required": true,
            "oneOf": [
              {
                "title": "Cloud",
                "enum": ["cloud"]
              },
              {
                "title": "Local",
                "enum": ["local"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32);"
            }
          },
          "ignoreDevice": {
            "type": "boolean",
            "title": "Hide From HomeKit",
            "description": "If true, this accessory will be removed and ignored from HomeKit.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && model.devices[arrayIndices].connection === 'cloud');"
            }
          },
          "model": {
            "title": "Model",
            "description": "The model of this device.",
            "type": "string",
            "required": true,
            "oneOf": [
              {
                "title": "MSS-110 1.0",
                "enum": ["MSS110-1"]
              },
              {
                "title": "MSS-110 2.0",
                "enum": ["MSS110-2"]
              },
              {
                "title": "MSL-100",
                "enum": ["MSL-100"]
              },
              {
                "title": "MSL-120",
                "enum": ["MSL-120"]
              },
              {
                "title": "MSL-320",
                "enum": ["MSL-320"]
              },
              {
                "title": "MSL-420",
                "enum": ["MSL-420"]
              },
              {
                "title": "MSS-210",
                "enum": ["MSS210"]
              },
              {
                "title": "MSS-310",
                "enum": ["MSS310"]
              },
              {
                "title": "MSS-420F",
                "enum": ["MSS420F"]
              },
              {
                "title": "MSS-425",
                "enum": ["MSS425"]
              },
              {
                "title": "MSS-425E",
                "enum": ["MSS425E"]
              },
              {
                "title": "MSS-425F",
                "enum": ["MSS425F"]
              },
              {
                "title": "MSS-510",
                "enum": ["MSS510"]
              },
              {
                "title": "MSS-510M",
                "enum": ["MSS510M"]
              },
              {
                "title": "MSS-530H",
                "enum": ["MSS530H"]
              },
              {
                "title": "MSS-550",
                "enum": ["MSS550"]
              },
              {
                "title": "MSS-560",
                "enum": ["MSS560"]
              },
              {
                "title": "MSS-560",
                "enum": ["MSS570x"]
              },
              {
                "title": "MSS-570",
                "enum": ["MSS570"]
              },
              {
                "title": "MSS-5X0",
                "enum": ["MSS5X0"]
              },
              {
                "title": "MSS-620",
                "enum": ["MSS620"]
              },
              {
                "title": "MSS-630",
                "enum": ["MSS630"]
              },
              {
                "title": "MSS-710",
                "enum": ["MSS710"]
              },
              {
                "title": "MSG-100",
                "enum": ["MSG100"]
              },
              {
                "title": "MSG-200",
                "enum": ["MSG200"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && ['cloud', 'local'].includes(model.devices[arrayIndices].connection) && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "showAs": {
            "type": "string",
            "title": "Show As",
            "oneOf": [
              {
                "title": "Switch (Default)",
                "enum": ["default"]
              },
              {
                "title": "Outlet",
                "enum": ["outlet"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && ['cloud', 'local'].includes(model.devices[arrayIndices].connection) && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "hideChannels": {
            "type": "string",
            "title": "Hide Channels",
            "description": "A comma separated list of channels to hide for this device. For example '0' or '0,1,2'.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && ['cloud', 'local'].includes(model.devices[arrayIndices].connection) && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "firmwareRevision": {
            "title": "Firmware Version",
            "placeholder": "Firmware Version",
            "type": "string",
            "description": "The firmware version of this device.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && ['cloud', 'local'].includes(model.devices[arrayIndices].connection) && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "deviceUrl": {
            "title": "IP Address",
            "description": "The IP address of this device.",
            "type": "string",
            "required": true,
            "format": "ipv4",
            "placeholder": "192.168.1.1",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && model.devices[arrayIndices].connection === 'local' && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "channelCount": {
            "title": "Channel Count",
            "description": "The number of separate switches/outlets this device has.",
            "type": "integer",
            "placeholder": 1,
            "minimum": 1,
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && model.devices[arrayIndices].connection === 'local' && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "garageDoorOpeningTime": {
            "title": "Garage Door Opening Time",
            "description": "The number of seconds which it takes the garage door to open/close. Only for MSG-100/MSG-200.",
            "type": "integer",
            "placeholder": "20",
            "minimum": 1,
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && ['cloud', 'local'].includes(model.devices[arrayIndices].connection) && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && ['MSG100', 'MSG200'].includes(model.devices[arrayIndices].model) && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "overrideLogging": {
            "type": "string",
            "title": "Override Logging Setting",
            "description": "Override global logging setting for this device.",
            "oneOf": [
              {
                "title": "Default (Use Global Setting)",
                "enum": ["default"]
              },
              {
                "title": "Enable Standard Logging",
                "enum": ["standard"]
              },
              {
                "title": "Enable Debug Logging",
                "enum": ["debug"]
              },
              {
                "title": "Disable All Logging",
                "enum": ["disable"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].connection && ['cloud', 'local'].includes(model.devices[arrayIndices].connection) && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "type": "fieldset",
      "title": "Optional Settings",
      "description": "Optional settings for the plugin, including refresh rates and global logging settings.",
      "expandable": true,
      "items": [
        "username",
        "password",
        "userkey",
        "cloudRefreshRate",
        "refreshRate",
        "disableDeviceLogging",
        "debug",
        "disablePlugin"
      ]
    },
    {
      "key": "devices",
      "title": "Device Settings",
      "description": "Optional settings for your Meross devices.",
      "expandable": true,
      "add": "Add Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "devices[].name",
            "devices[].serialNumber",
            "devices[].connection",
            "devices[].ignoreDevice",
            "devices[].model",
            "devices[].showAs",
            "devices[].hideChannels",
            "devices[].firmwareRevision",
            "devices[].deviceUrl",
            "devices[].channelCount",
            "devices[].garageDoorOpeningTime",
            "devices[].overrideLogging"
          ]
        }
      ]
    }
  ]
}
