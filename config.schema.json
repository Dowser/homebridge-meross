{
  "pluginAlias": "Meross",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "customUiPath": "./lib/homebridge-ui",
  "headerDisplay": "<p align=\"center\"><img width=\"60%\" src=\"https://user-images.githubusercontent.com/43026681/127397024-8b15fc07-f31b-44bd-89e3-51d738d2609a.png\"></p><p align=\"center\">For help and support please visit our <a href=\"https://github.com/bwp91/homebridge-meross/wiki\">GitHub Wiki</a>. We hope you find this plugin useful!</p>",
  "schema": {
    "name": {
      "type": "string",
      "title": "Plugin Name",
      "default": "Meross"
    },
    "username": {
      "title": "Meross Username",
      "type": "string",
      "placeholder": "email@email.com",
      "description": "Enter your Meross username to enable cloud devices."
    },
    "password": {
      "title": "Meross Password",
      "type": "string",
      "description": "Enter your Meross password to enable cloud devices."
    },
    "userkey": {
      "title": "Meross Key",
      "type": "string",
      "description": "Enter your Meross key to enable local devices. You don't need to enter this if you have entered your username and password above, even for local devices. For help with obtaining this value see <a href=\"https://github.com/bwp91/homebridge-meross/wiki/Local-Control\" target=\"_blank\">the wiki</a>.",
      "condition": {
        "functionBody": "return !(model.username && model.password);"
      }
    },
    "cloudRefreshRate": {
      "title": "Cloud Refresh Rate",
      "type": "integer",
      "description": "Number of seconds between polls to devices using cloud connection. Should not be needed since the plugin supports real-time updates. Leave at 0 to disable polling, otherwise must be 30 or more.",
      "placeholder": 0,
      "minimum": 0,
      "condition": {
        "functionBody": "return (model.username && model.password);"
      }
    },
    "refreshRate": {
      "title": "Local Refresh Rate",
      "type": "integer",
      "description": "Number of seconds between polls to local Meross devices. Set to 0 to disable polling, otherwise must be 5 or more.",
      "placeholder": 5,
      "minimum": 0
    },
    "disableDeviceLogging": {
      "type": "boolean",
      "title": "Disable Device Logging",
      "description": "Global logging setting for accessory status changes. If true then accessory status changes will not be logged. This can also be set per accessory later in the config."
    },
    "debug": {
      "title": "Debug Logging",
      "type": "boolean",
      "description": "Global logging setting for the plugin. If true then debug information will be added to the log. This can also be set per accessory later in the config."
    },
    "disablePlugin": {
      "title": "Disable Plugin",
      "type": "boolean",
      "description": "If true, the plugin will remove all accessories and not load the plugin on restart."
    },
    "devices": {
      "type": "array",
      "title": "Device Settings",
      "description": "Optional settings for your Meross devices.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "A label for this device, will be used as the HomeKit name if setting up a local device.",
            "type": "string",
            "required": true
          },
          "serialNumber": {
            "title": "Serial Number (UUID)",
            "type": "string",
            "placeholder": "Serial Number",
            "minLength": 32,
            "maxLength": 32,
            "required": true,
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].name);"
            }
          },
          "deviceUrl": {
            "title": "Connection Type",
            "description": "Leave this field blank for cloud connection or enter the IP address of this device for local connection.",
            "type": "string",
            "format": "ipv4",
            "placeholder": "192.168.1.1",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32);"
            }
          },
          "ignoreDevice": {
            "type": "boolean",
            "title": "Hide From HomeKit",
            "description": "If true, this accessory will be removed and ignored from HomeKit.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].deviceUrl);"
            }
          },
          "model": {
            "title": "Model",
            "description": "The model of this device.",
            "type": "string",
            "required": true,
            "oneOf": [
              {
                "title": "MOD-100",
                "enum": ["MOD100"]
              },
              {
                "title": "MRS-100",
                "enum": ["MRS100"]
              },
              {
                "title": "MSG-100",
                "enum": ["MSG100"]
              },
              {
                "title": "MSG-200",
                "enum": ["MSG200"]
              },
              {
                "title": "MSL-100",
                "enum": ["MSL-100"]
              },
              {
                "title": "MSL-100D",
                "enum": ["MSL-100D"]
              },
              {
                "title": "MSL-120",
                "enum": ["MSL-120"]
              },
              {
                "title": "MSL-120B",
                "enum": ["MSL-120B"]
              },
              {
                "title": "MSL-120D",
                "enum": ["MSL-120D"]
              },
              {
                "title": "MSL-320",
                "enum": ["MSL-320"]
              },
              {
                "title": "MSL-420",
                "enum": ["MSL-420"]
              },
              {
                "title": "MSL-430",
                "enum": ["MSL-430"]
              },
              {
                "title": "MSS-110",
                "enum": ["MSS110"]
              },
              {
                "title": "MSS-210",
                "enum": ["MSS210"]
              },
              {
                "title": "MSS-210N",
                "enum": ["MSS210N"]
              },
              {
                "title": "MSS-310",
                "enum": ["MSS310"]
              },
              {
                "title": "MSS-310H",
                "enum": ["MSS310"]
              },
              {
                "title": "MSS-310R",
                "enum": ["MSS310"]
              },
              {
                "title": "MSS-420",
                "enum": ["MSS420"]
              },
              {
                "title": "MSS-420F",
                "enum": ["MSS420F"]
              },
              {
                "title": "MSS-425",
                "enum": ["MSS425"]
              },
              {
                "title": "MSS-425E",
                "enum": ["MSS425E"]
              },
              {
                "title": "MSS-425F",
                "enum": ["MSS425F"]
              },
              {
                "title": "MSS-510",
                "enum": ["MSS510"]
              },
              {
                "title": "MSS-510M",
                "enum": ["MSS510M"]
              },
              {
                "title": "MSS-510X",
                "enum": ["MSS510X"]
              },
              {
                "title": "MSS-530",
                "enum": ["MSS530"]
              },
              {
                "title": "MSS-530H",
                "enum": ["MSS530H"]
              },
              {
                "title": "MSS-550",
                "enum": ["MSS550"]
              },
              {
                "title": "MSS-550X",
                "enum": ["MSS550X"]
              },
              {
                "title": "MSS-560",
                "enum": ["MSS560"]
              },
              {
                "title": "MSS-565",
                "enum": ["MSS565"]
              },
              {
                "title": "MSS-570",
                "enum": ["MSS570"]
              },
              {
                "title": "MSS-570X",
                "enum": ["MSS570x"]
              },
              {
                "title": "MSS-5X0",
                "enum": ["MSS5X0"]
              },
              {
                "title": "MSS-620",
                "enum": ["MSS620"]
              },
              {
                "title": "MSS-620B",
                "enum": ["MSS620B"]
              },
              {
                "title": "MSS-620S",
                "enum": ["MSS620S"]
              },
              {
                "title": "MSS-630",
                "enum": ["MSS630"]
              },
              {
                "title": "MSS-710",
                "enum": ["MSS710"]
              },
              {
                "title": "MSS-810",
                "enum": ["MSS810"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "showAs": {
            "type": "string",
            "title": "Show As",
            "oneOf": [
              {
                "title": "Switch (Default)",
                "enum": ["default"]
              },
              {
                "title": "Outlet",
                "enum": ["outlet"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice && model.devices[arrayIndices].model && !['MOD100', 'MRS100', 'MSG100'].includes(model.devices[arrayIndices].model));"
            }
          },
          "hideChannels": {
            "type": "string",
            "title": "Hide Channels",
            "description": "A comma separated list of channels to hide for this device. Use '0' to hide the 'All On/Off' accessory. For example '0' or '0,1,2'.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice && model.devices[arrayIndices].model && !['MOD100', 'MRS100', 'MSG100'].includes(model.devices[arrayIndices].model));"
            }
          },
          "inUsePowerThreshold": {
            "type": "integer",
            "title": "'In Use' Threshold",
            "description": "HomeKit will set the 'In Use' status of outlet devices to true when the wattage is above this number. Only applies to models that support power readings. Must be 0 or more.",
            "placeholder": 0,
            "minimum": 0,
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice && model.devices[arrayIndices].model && !['MOD100', 'MRS100', 'MSG100'].includes(model.devices[arrayIndices].model));"
            }
          },
          "garageDoorOpeningTime": {
            "title": "Operation Time",
            "description": "The number of seconds for which it takes the garage door to open/close.",
            "type": "integer",
            "placeholder": "20",
            "minimum": 1,
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && ['MSG100', 'MSG200'].includes(model.devices[arrayIndices].model) && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "reversePolarity": {
            "type": "boolean",
            "title": "Reverse Polarity",
            "description": "If true, the plugin will reverse the open/close commands that it sends.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && model.devices[arrayIndices].model === 'MRS100' && !model.devices[arrayIndices].ignoreDevice);"
            }
          },
          "firmwareRevision": {
            "title": "Firmware Version",
            "placeholder": "Firmware Version",
            "type": "string",
            "description": "Optionally override the firmware version for this device. Can be used to override firmware to hide HomeKit firmware update available messages.",
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice && model.devices[arrayIndices].model);"
            }
          },
          "overrideLogging": {
            "type": "string",
            "title": "Override Logging Setting",
            "description": "Override global logging setting for this device.",
            "oneOf": [
              {
                "title": "Default (Use Global Setting)",
                "enum": ["default"]
              },
              {
                "title": "Enable Standard Logging",
                "enum": ["standard"]
              },
              {
                "title": "Enable Debug Logging",
                "enum": ["debug"]
              },
              {
                "title": "Disable All Logging",
                "enum": ["disable"]
              }
            ],
            "condition": {
              "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].serialNumber && model.devices[arrayIndices].serialNumber.length === 32 && !model.devices[arrayIndices].ignoreDevice && model.devices[arrayIndices].model);"
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "type": "fieldset",
      "title": "Optional Settings",
      "description": "Optional settings for the plugin, including refresh rates and global logging settings.",
      "expandable": true,
      "items": [
        "username",
        "password",
        "userkey",
        "cloudRefreshRate",
        "refreshRate",
        "disableDeviceLogging",
        "debug",
        "disablePlugin"
      ]
    },
    {
      "key": "devices",
      "title": "Device Settings",
      "description": "Optional settings for your Meross devices.",
      "expandable": true,
      "add": "Add Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "devices[].name",
            "devices[].serialNumber",
            "devices[].deviceUrl",
            "devices[].ignoreDevice",
            "devices[].model",
            "devices[].showAs",
            "devices[].hideChannels",
            "devices[].inUsePowerThreshold",
            "devices[].garageDoorOpeningTime",
            "devices[].reversePolarity",
            "devices[].firmwareRevision",
            "devices[].overrideLogging"
          ]
        }
      ]
    }
  ]
}
